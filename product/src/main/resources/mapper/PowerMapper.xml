<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gym.SpringBoot.dao.IPowerDao">
    <select id="showRole" resultType="Map">
     select * from role where role_id not in (4)
    </select>

    <select id="showRoleById" resultType="Map">
        select mid from role_menu where rid=#{role_id} and mid not in (select menu_id from menu where menu_pid=0)
    </select>

    <select id="showMenuById" resultType="Map">
        select menu_id from menu where menu_pid=0
    </select>

    <delete id="delRoleMenu">
        delete from role_menu where rid=#{role_id}
    </delete>

    <insert id="addRoleMenu">
      insert into role_menu values(#{role_id},#{id})
    </insert>

    <select id="showMenu" resultMap="findMenu">
 select
ttt.menu_id,ttt.menu_name,ttt.menu_pid,ttt.menu_path,ttt.menu_component,ttt.menu_icon,
bbb.menu_id menu2_id,bbb.menu_name menu2_name,bbb.menu_pid menu2_pid,bbb.menu_path menu2_path,
bbb.menu_component menu2_component,bbb.menu_icon menu2_icon
from(
select m.menu_id,m.menu_name,m.menu_pid,m.menu_path,m.menu_component,m.menu_icon from menu m
where m.menu_id in(
select distinct rm.mid from role_menu rm where rm.rid in(
select rf.role_id from role_staff rf where rf.staff_id=(1)))
) ttt
left join
(
select m.menu_id,m.menu_name,m.menu_pid,m.menu_path,m.menu_component,m.menu_icon from menu m
where m.menu_id in(
select distinct rm.mid from role_menu rm where rm.rid in(
select rf.role_id from role_staff rf where rf.staff_id=(1)))
) bbb
on ttt.menu_id=bbb.menu_pid
where ttt.menu_pid=0
ORDER BY menu_id asc
    </select>
    <resultMap id="findMenu" type="Menu">
        <id column="menu_id" property="menu_id"></id>
        <id column="menu_name" property="menu_name"></id>
        <result column="menu_pid" property="menu_pid"></result>
        <result column="menu_path" property="menu_path"></result>
        <result column="menu_component" property="menu_component"></result>
        <result column="menu_icon" property="menu_icon"></result>
        <collection property="menuList" ofType="Menu">
            <id column="menu2_id" property="menu_id"></id>
            <result column="menu2_path" property="menu_path"></result>
            <result column="menu2_pid" property="menu_pid"></result>
            <result column="menu2_name" property="menu_name"></result>
            <result column="menu2_component" property="menu_component"></result>
        </collection>
    </resultMap>

    <select id="ckdRoleName" resultType="Map">
        select * from role where role_name=#{role_id}
    </select>

    <update id="updRoleNameById">
      update role set role_name=#{role_name} where role_id=#{role_id}
    </update>

    <insert id="addRoleName">
      insert into role values(null,#{role_name})
    </insert>

    <insert id="addCourseTable">
        insert into coursetable values(null,#{coursetable_user_id},#{coursetable_staff_id},#{coursetable_combo_id},#{coursetable_time},#{coursetable_content})
    </insert>

    <select id="showCourseTable" resultType="Map">
        select * from coursetable where coursetable_user_id=#{user_id} and coursetable_staff_id=#{staff_id} and coursetable_combo_id=#{combo_id}
    </select>

    <select id="findCourseTableById" resultType="Map">
        select * from coursetable where coursetable_user_id=#{user_id} and coursetable_staff_id=#{staff_id} and coursetable_combo_id=#{combo_id} and coursetable_time=#{time}
    </select>

    <update id="updCourseTable">
        update coursetable set coursetable_content=#{coursetable_content}
        where coursetable_id=#{coursetable_id}
    </update>

    <select id="findCourseTableTimeByOrders" resultType="Map">
      select * from orders
        where order_user_id=#{user_id}
        and order_staff_id=#{staff_id}
        and order_combo_id=#{combo_id}
        and #{time} between order_time
        and order_endtime
    </select>

</mapper>